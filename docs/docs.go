// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "soporte@ejemplo.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/stocks": {
            "get": {
                "description": "Recupera una lista filtrada y paginada de acciones bursátiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Obtener lista de stocks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Texto de búsqueda general (ticker, company, brokerage, etc.)",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Número de página (por defecto: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Registros por página (por defecto: 10)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Ordenar por puntaje de recomendación",
                        "name": "recommends",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Valor mínimo del precio objetivo",
                        "name": "minTargetTo",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Valor máximo del precio objetivo",
                        "name": "maxTargetTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "USD",
                        "description": "Moneda de los precios (por defecto: USD)",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Consulta de acciones exitosa",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.PaginatedData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Parámetros inválidos",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        },
        "/stocks/sync": {
            "post": {
                "description": "Actualiza la base de datos con información de acciones desde un servicio externo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Sincronizar stocks desde fuente externa",
                "parameters": [
                    {
                        "description": "Parámetros de sincronización",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stocks.SyncRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sincronización exitosa",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Error del servidor",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.APIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Código HTTP",
                    "type": "integer"
                },
                "data": {
                    "description": "Datos de respuesta"
                },
                "error": {
                    "description": "Detalles del error",
                    "type": "string"
                },
                "message": {
                    "description": "Mensaje descriptivo",
                    "type": "string"
                }
            }
        },
        "response.PaginatedData": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Lista de ítems"
                },
                "page": {
                    "description": "Número de página actual",
                    "type": "integer"
                },
                "size": {
                    "description": "Ítems por página",
                    "type": "integer"
                },
                "total": {
                    "description": "Total de ítems disponibles",
                    "type": "integer"
                }
            }
        },
        "stocks.SyncRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Número de iteraciones para la sincronización",
                    "type": "integer",
                    "minimum": 1,
                    "example": 5
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Stock Advisor API",
	Description:      "API para gestionar y consultar datos de acciones bursátiles",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
